# This workflow

workflow:
  name:  sanger-wgs-variant-calling
  version: "0.1.2"

  input:
    song_collab_url:
      type: string
      default: "https://song.cancercollaboratory.org"
    song_aws_url:
      type: string
      default: "https://virginia.song.icgc.org"
    reference:
      type: string
      is_file: true
      default: "[core_ref_GRCh38_hla_decoy_ebv.tar.gz]https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/sanger-variant-calling/core_ref_GRCh38_hla_decoy_ebv.tar.gz"
    annot:
      type: string
      is_file: true
      default: "[VAGrENT_ref_GRCh38_hla_decoy_ebv_ensembl_91.tar.gz]https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/sanger-variant-calling/VAGrENT_ref_GRCh38_hla_decoy_ebv_ensembl_91.tar.gz"
    snv_indel:
      type: string
      is_file: true
      default: "[SNV_INDEL_ref_GRCh38_hla_decoy_ebv-fragment.tar.gz]https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/sanger-variant-calling/SNV_INDEL_ref_GRCh38_hla_decoy_ebv-fragment.tar.gz"
    cnv_sv:
      type: string
      is_file: true
      default: "[CNV_SV_ref_GRCh38_hla_decoy_ebv_brass6+.tar.gz]https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/sanger-variant-calling/CNV_SV_ref_GRCh38_hla_decoy_ebv_brass6+.tar.gz"
    qcset:
      type: string
      is_file: true
      default: "[qcGenotype_GRCh38_hla_decoy_ebv.tar.gz]https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/sanger-variant-calling/qcGenotype_GRCh38_hla_decoy_ebv.tar.gz"
    exclude:
      type: string
      default: "chrUn%,HLA%,%_alt,%_random,chrM,chrEBV"
    species:
      type: string
      default: "human"
    assembly:
      type: string
      default: "GRCh38"
    skipqc:
      type: boolean
      default: false
    pindelcpu:
      type: integer
    cavereads:
      type: integer
      default: 800000
    purity:
      type: float
      default: 1.0
    ploidy:
      type: float
      default: 2.0
    num_threads:
      type: integer
      default: 18
    ref_file:
      type: string
      is_file: true
      default: "[GRCh38_hla_decoy_ebv.fa]https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa"
    ref_fai_file:
      type: string
      is_file: true
      default: "[GRCh38_hla_decoy_ebv.fa.fai]https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa.fai"
    object_store_endpoint_url:
      type: string
      default: "https://object.cancercollaboratory.org:9080"
    bucket_name:
      type: string
      default: "argo-test"
    credentials_file:
      type: string
      is_file: true
      default: "/home/ubuntu/.aws/credentials"
    payload_schema_version:
      type: string
      default: "0.1.0-rc.1"
    sanger_snv_vcf_name_pattern:
      type: string
      default: "flagged.muts.vcf.gz"
    sanger_indel_vcf_name_pattern:
      type: string
      default: "flagged.vcf.gz"
    somatic_variant_call_bundle_type:
      type: string
      default: "somatic_variant_call"
    dna_alignment_bundle_type:
      type: string
      default: "dna_alignment"
    sequencing_experiment_bundle_type:
      type: string
      default: "sequencing_experiment"
    seq_format:
      type: string
      default: "bam"
    library_strategy:
      type: string
      default: "WGS"
    program_id:
      type: string
      is_required: true
    submitter_donor_id:
      type: string
      is_required: true
    normal_submitter_sample_id:
      type: string
      is_required: true
    tumour_submitter_sample_id:
      type: string
      is_required: true
    normal_designation:
      type: string
      default: "Normal"
    tumour_designation:
      type: string
      default: "Tumour"
    ceph_get_payload.tool_url:
      type: string
      is_file: true
      default: "[ceph-get-payload.cwl]https://raw.githubusercontent.com/icgc-argo/data-processing-utility-tools/ceph-get-payload.0.1.2/tools/ceph-get-payload/ceph-get-payload.cwl"
    s3_download.tool_url:
      type: string
      is_file: true
      default: "[s3-download.cwl]https://raw.githubusercontent.com/icgc-argo/data-processing-utility-tools/s3-download.0.1.2/tools/s3-download/s3-download.cwl"
    generate_bas.tool_url:
      type: string
      is_file: true
      default: "[generate-bas.cwl]https://raw.githubusercontent.com/icgc-argo/variant-calling-tools/generate-bas.0.1.0/tools/generate-bas/generate-bas.cwl"
    sanger_caller.tool_url:
      type: string
      is_file: true
      default: "[sanger-wgs-variant-caller.cwl]https://raw.githubusercontent.com/icgc-argo/variant-calling-tools/sanger-wgs-variant-caller.2.1.0-3/tools/sanger-wgs-variant-caller/sanger-wgs-variant-caller.cwl"
    repack_sanger_results.tool_url:
      type: string
      is_file: true
      default: "[repack-sanger-results.cwl]https://raw.githubusercontent.com/icgc-argo/variant-calling-tools/repack-sanger-results.0.1.1/tools/repack-sanger-results/repack-sanger-results.cwl"
    extract_files_from_tarball.tool_url:
      type: string
      is_file: true
      default: "[extract-files-from-tarball.cwl]https://raw.githubusercontent.com/icgc-argo/data-processing-utility-tools/extract-files-from-tarball.0.1.0/tools/extract-files-from-tarball/extract-files-from-tarball.cwl"
    payload_gen_and_s3_submit_wf.tool_url:
      type: string
      is_file: true
      default: "[payload-gen-and-s3-submit-wf.cwl]https://raw.githubusercontent.com/icgc-argo/dna-seq-processing-wfs/payload-gen-and-s3-submit-wf.0.2.0/workflows/payload-gen-and-s3-submit-wf/cwl/payload-gen-and-s3-submit-wf.cwl"
    s3_upload_wf.tool_url:
      type: string
      is_file: true
      default: "[s3-upload-wf.cwl]https://raw.githubusercontent.com/icgc-argo/dna-seq-processing-wfs/s3-upload-wf.0.1.0/workflows/s3-upload-wf/cwl/s3-upload-wf.cwl"
    wf_short_name:
      type: string
      default: "sanger-wgs"
    wf_version:
      type: string
      default: "0.1.2"

  tasks:
    get_payload_aligned_normal:
      tool: ceph_get_payload
      input:
        endpoint_url: object_store_endpoint_url
        bucket_name: bucket_name
        s3_credential_file: credentials_file
        bundle_type: dna_alignment_bundle_type
        seq_format: seq_format
        library_strategy: library_strategy
        program_id: program_id
        submitter_donor_id: submitter_donor_id
        submitter_sample_id: normal_submitter_sample_id
        tumour_normal_designation: normal_designation
        tool_url: ceph_get_payload.tool_url

    get_payload_aligned_tumour:
      tool: ceph_get_payload
      input:
        endpoint_url: object_store_endpoint_url
        bucket_name: bucket_name
        s3_credential_file: credentials_file
        bundle_type: dna_alignment_bundle_type
        seq_format: seq_format
        library_strategy: library_strategy
        program_id: program_id
        submitter_donor_id: submitter_donor_id
        submitter_sample_id: tumour_submitter_sample_id
        tumour_normal_designation: tumour_designation
        tool_url: ceph_get_payload.tool_url

    get_payload_tumour_sequencing_experiment:
      tool: ceph_get_payload
      input:
        endpoint_url: object_store_endpoint_url
        bucket_name: bucket_name
        s3_credential_file: credentials_file
        bundle_type: sequencing_experiment_bundle_type
        library_strategy: library_strategy
        program_id: program_id
        submitter_donor_id: submitter_donor_id
        submitter_sample_id: tumour_submitter_sample_id
        tumour_normal_designation: tumour_designation
        tool_url: ceph_get_payload.tool_url

    download_normal:
      tool: s3_download
      input:
        endpoint_url: object_store_endpoint_url
        bucket_name: bucket_name
        payload_json: payload@get_payload_aligned_normal
        s3_credential_file: credentials_file
        tool_url: s3_download.tool_url

    download_tumour:
      tool: s3_download
      input:
        endpoint_url: object_store_endpoint_url
        bucket_name: bucket_name
        payload_json: payload@get_payload_aligned_tumour
        s3_credential_file: credentials_file
        tool_url: s3_download.tool_url

    generate_bas_normal:
      tool: generate_bas
      input:
        input: download_file@download_normal
        num_threads: num_threads
        ref_file: ref_file
        ref_fai_file: ref_fai_file
        tool_url: generate_bas.tool_url

    generate_bas_tumour:
      tool: generate_bas
      input:
        input: download_file@download_tumour
        num_threads: num_threads
        ref_file: ref_file
        ref_fai_file: ref_fai_file
        tool_url: generate_bas.tool_url

    sanger_calling:
      tool: sanger_caller
      input:
        num_threads: num_threads
        reference: reference
        annot: annot
        snv_indel: snv_indel
        cnv_sv: cnv_sv
        qcset: qcset
        tumour: bam_and_bas@generate_bas_tumour
        tumourIdx: bai@generate_bas_tumour
        normal: bam_and_bas@generate_bas_normal
        normalIdx: bai@generate_bas_normal
        exclude: exclude
        species: species
        assembly: assembly
        skipqc: skipqc
        pindelcpu: pindelcpu
        cavereads: cavereads
        purity: purity
        ploidy: ploidy
        tool_url: sanger_caller.tool_url

    repack_sanger_results:
      tool: repack_sanger_results
      input:
        input: result_archive@sanger_calling
        library_strategy: library_strategy
        tool_url: repack_sanger_results.tool_url

    extract_sanger_snv:
      tool: extract_files_from_tarball
      input:
        tarball: caveman@repack_sanger_results
        pattern: sanger_snv_vcf_name_pattern
        tool_url: extract_files_from_tarball.tool_url

    extract_sanger_indel:
      tool: extract_files_from_tarball
      input:
        tarball: pindel@repack_sanger_results
        pattern: sanger_indel_vcf_name_pattern
        tool_url: extract_files_from_tarball.tool_url

    extract_sanger_sv:
      tool: extract_files_from_tarball
      input:
        tarball: brass@repack_sanger_results
        pattern: sanger_sv_vcf_name_pattern
        tool_url: extract_files_from_tarball.tool_url

    extract_sanger_cnv:
      tool: extract_files_from_tarball
      input:
        tarball: ascat@repack_sanger_results
        pattern: sanger_cnv_vcf_name_pattern
        tool_url: extract_files_from_tarball.tool_url

    sanger_results_payload_gen_and_s3_submit_wf:
      tool: payload_gen_and_s3_submit_wf
      input:
        bundle_type: somatic_variant_call_bundle_type
        payload_schema_version: payload_schema_version
        file_to_upload:
          - output_file@extract_sanger_snv
          - output_file@extract_sanger_indel
          - output_file@extract_sanger_sv
          - output_file@extract_sanger_cnv
        user_submit_metadata: payload@get_payload_tumour_sequencing_experiment
        analysis_input_payload:
          - payload@get_payload_aligned_normal
          - payload@get_payload_aligned_tumour
        wf_short_name: wf_short_name
        wf_version: wf_version
        credentials_file: credentials_file
        endpoint_url: object_store_endpoint_url
        bucket_name: bucket_name
        tool_url: payload_generation.tool_url

    sanger_results_s3_upload:
      tool: s3_upload_wf
      input:
        endpoint_url: object_store_endpoint_url
        bucket_name: bucket_name
        s3_credential_file: credentials_file
        bundle_type: somatic_variant_call_bundle_type
        upload_file: variant_call_renamed_result@sanger_results_payload_gen_and_s3_submit_wf
        payload_jsons: payload@sanger_results_payload_gen_and_s3_submit_wf
        tool_url: s3_upload_wf.tool_url


# A workflow is made up with one or more tools
# Each tool can have its own docker imagine if desirable
tools:
  ceph_get_payload:
    command: cwltool_launcher.py

    input:
      endpoint_url:
        type: string
      bucket_name:
        type: string
      s3_credential_file:
        type: string
        is_file: true
      bundle_type:
        type: string
      seq_format:
        type: string
      library_strategy:
        type: string
      program_id:
        type: string
      submitter_donor_id:
        type: string
      submitter_sample_id:
        type: string
      tumour_normal_designation:
        type: string
      tool_url:
        type: string
        is_file: true


  s3_download:
    command: cwltool_launcher.py
    input:
      endpoint_url:
        type: string
      bucket_name:
        type: string
      payload_json:
        type: string
        is_file: true
      s3_credential_file: credentials_file
      tool_url:
        type: string
        is_file: true
    output:
      seq_files:
        type: array
        items:
          type: string
          is_file: true

  generate_bas:
    command: cwltool_launcher.py
    input:
      input:
        type: string
        is_file: true
      num_threads:
        type: integer
      ref_file:
        type: string
        is_file: true
      ref_fai_file:
        type: string
        is_file: true
      tool_url:
        type: string
        is_file: true

  sanger_caller:
    command: cwltool_launcher.py
    input:
      num_threads:
        type: integer
      reference:
        type: string
        is_file: true
      annot:
        type: string
        is_file: true
      snv_indel:
        type: string
        is_file: true
      cnv_sv:
        type: string
        is_file: true
      qcset:
        type: string
        is_file: true
      tumour:
        type: string
        is_file: true
      tumourIdx:
        type: string
        is_file: true
      normal:
        type: string
        is_file: true
      normalIdx:
        type: string
        is_file: true
      exclude:
        type: string
      species:
        type: string
      assembly:
        type: string
      skipqc:
        type: boolean
      pindelcpu:
        type: integer
      cavereads:
        type: integer
      purity:
        type: float
      ploidy:
        type: float
      tool_url:
        type: string
        is_file: true

  repack_sanger_results:
    command: cwltool_launcher.py
    input:
      input:
        type: string
        is_file: true
      library_strategy:
        type: string
      tool_url:
        type: string
        is_file: true

  extract_files_from_tarball:
    command: cwltool_launcher.py
    input:
      tarball:
        type: string
        is_file: true
      pattern:
        type: string
      tool_url:
        type: string
        is_file: true

  payload_gen_and_s3_submit_wf:
    command: cwltool_launcher.py
    input:
      bundle_type:
        type: string
      files_to_upload:
        type: array
        items:
          type: string
          is_file: true
      payload_schema_version:
        type: string
      user_submit_metadata:
        type: string
        is_file: true
      analysis_input_payload:
        type: array
        items:
          type: string
          is_file: true
      credentials_file:
        type: string
        is_file: true
      endpoint_url:
        type: string
      bucket_name:
        type: string
    output:
      payload:
        type: array
        items:
          type: string
          is_file: true
      variant_call_renamed_result:
        type: array
        items:
          type: string
          is_file: true

  s3_upload_wf:
    command: cwltool_launcher.py
    input:
      endpoint_url:
        type: string
      bucket_name:
        type: string
      bundle_type:
        type: string
      payload_jsons:
        type: array
        items:
          type: string
          is_file: true
      s3_credential_file:
        type: File
      upload_files:
        type: array
        items:
          type: string
          is_file: true


